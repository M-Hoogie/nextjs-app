import Head from "next/head";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import { useState, useEffect } from "react";
import LoginButton from "@/components/login-btn";
import { SiteOwner } from "@/components/site-owner";
import { getServerSession } from "next-auth";
import { GetServerSideProps } from "next";
import { authOptions } from "./api/auth/[...nextauth]";
import { URL } from "url";

const inter = Inter({ subsets: ["latin"] });

export const getServerSideProps: GetServerSideProps = async (ctx) => {
  const session = await getServerSession(ctx.req, ctx.res, authOptions);
  const authURL = new URL(process.env.NEXT_PUBLIC_HOST ?? "");
  const requestedHost =
    ctx.req.headers["x-forwarded-host"] || ctx.req.headers.host;

  if (session && requestedHost === authURL.host) {
    process.stdout.write(
      `Logged in: ${JSON.stringify({
        session,
        headers: ctx.req.headers,
        redirectURL: `${authURL.protocol}stijlbreuk.${authURL.host}`,
      })}`
    );
    return {
      redirect: {
        destination: `${authURL.protocol}//stijlbreuk.${authURL.host}`,
        permanent: false,
      },
    };
  }

  process.stdout.write(
    `Host checker: ${JSON.stringify({
      headers: ctx.req.headers,
      hostRequest: ctx.req.headers.host,
      authURLHost: authURL.host,
    })}`
  );

  if (!session && requestedHost !== authURL.host) {
    return {
      redirect: {
        destination: `${authURL.origin}`,
        permanent: false,
      },
    };
  }

  return {
    props: {},
  };
};

export default function Home() {
  const formatter = Intl.DateTimeFormat("nl", { timeStyle: "medium" });

  useEffect(() => {
    const tenantPieces = window.location.host.split(".");
    if (tenantPieces) {
      setTenant(tenantPieces[0]);
    }
  }, []);

  const [tenant, setTenant] = useState<string>("");

  const [name, setName] = useState<string | null>(null);
  const [time, setTime] = useState<Date | null>(null);
  useEffect(() => {
    const id = setInterval(
      () =>
        fetch("/api/time")
          .then((res) => res.json())
          .then((json) => setTime(new Date(json.time))),
      1000
    );

    return () => clearInterval(id);
  }, []);

  useEffect(() => {
    fetch("api/hello")
      .then((res) => res.json())
      .then((json) => setName(json.name));
  }, []);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.description}>
          <p>
            <SiteOwner />
          </p>
          <div>
            <LoginButton />
          </div>
        </div>

        <div className={styles.center}>
          <h1 className={styles.title}>
            Welcome {name} to <a href="https://nextjs.org">Next.js!</a> <br />
            The time is {time && formatter.format(time)}
            <br />
            The tenant is: {tenant}
          </h1>
        </div>

        <div className={styles.grid}>
          <a
            href="https://nextjs.org/docs?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
            target="_blank"
            rel="noopener noreferrer"
          >
            <h2 className={inter.className}>
              Docs <span>-&gt;</span>
            </h2>
            <p className={inter.className}>
              Find in-depth information about Next.js features and&nbsp;API.
            </p>
          </a>

          <a
            href="https://nextjs.org/learn?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
            target="_blank"
            rel="noopener noreferrer"
          >
            <h2 className={inter.className}>
              Learn <span>-&gt;</span>
            </h2>
            <p className={inter.className}>
              Learn about Next.js in an interactive course with&nbsp;quizzes!
            </p>
          </a>

          <a
            href="https://vercel.com/templates?framework=next.js&utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
            target="_blank"
            rel="noopener noreferrer"
          >
            <h2 className={inter.className}>
              Templates <span>-&gt;</span>
            </h2>
            <p className={inter.className}>
              Discover and deploy boilerplate example Next.js&nbsp;projects.
            </p>
          </a>

          <a
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
            target="_blank"
            rel="noopener noreferrer"
          >
            <h2 className={inter.className}>
              Deploy <span>-&gt;</span>
            </h2>
            <p className={inter.className}>
              Instantly deploy your Next.js site to a shareable URL
              with&nbsp;Vercel.
            </p>
          </a>
        </div>
      </main>
    </>
  );
}
